def getGroups(options, path):
    import os, json, requests
    groups = []
    fullBridge = None
    bridgeName = options[0]
    with open(os.path.join(path, "hueBridgesUsersData.json"), "r") as f:
        data = json.load(f)
    for bridge in data:
        if bridge["name"] == bridgeName:
            fullBridge = bridge
    if fullBridge:
        groupsRequest = requests.get(f"http://{fullBridge['ip']}/api/{fullBridge['token']}/groups").json()
        for id in groupsRequest:
            if groupsRequest[id].get('type') == 'Room':
                group_name = groupsRequest[id].get('name')
                groups.append(group_name)
    if not groups:
        groups.append("None")
    return groups

if __name__ == "__main__":

    def save(func):
        import marshal, os
        file_name, _ = os.path.splitext(os.path.basename(__file__))
        code_string = marshal.dumps(func.__code__)
        with open(f'{file_name}.marshal', 'wb') as file:
            marshal.dump(code_string, file)
            
    save(getGroups)