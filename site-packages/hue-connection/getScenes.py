def getScenes(options, path):
    import requests, os, json
    group, room = options[0], options[1]
    totalScenes = []
    if group != "None" and room != "None":
        with open(os.path.join(path, "hueBridgesUsersData.json"), "r") as f:
            data = json.load(f)
        for bridge in data:
            if bridge["name"] == group:
                fullBridge = bridge
        scenes = requests.get(f'http://{fullBridge["ip"]}/api/{fullBridge["token"]}/scenes').json()
        groupsRequest = requests.get(f"http://{fullBridge['ip']}/api/{fullBridge['token']}/groups").json()
        for id in groupsRequest:
            if groupsRequest[id].get('type') == 'Room':
                if groupsRequest[id].get('name') == room:
                    groupID = id
        for id in scenes:
            if scenes[id].get('group') == groupID:
                totalScenes.append(scenes[id].get('name'))
    if not totalScenes:
        totalScenes.append("None")
    return totalScenes

if __name__ == "__main__":

    def save(func):
        import marshal, os
        file_name, _ = os.path.splitext(os.path.basename(__file__))
        code_string = marshal.dumps(func.__code__)
        with open(f'{file_name}.marshal', 'wb') as file:
            marshal.dump(code_string, file)
            
            
    save(getScenes)