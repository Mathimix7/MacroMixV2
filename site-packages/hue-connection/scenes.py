def executeScene(settings, path):
    secondImage = None
    status = True
    try:
        import requests, os, json   
        user, group, scene = settings["user"], settings["group"], settings["scene"]
        with open(os.path.join(path, "hueBridgesUsersData.json"), "r") as f:
            data = json.load(f)
        for bridge in data:
            if bridge["name"] == user:
                fullBridge = bridge
        scenes = requests.get(f'http://{fullBridge["ip"]}/api/{fullBridge["token"]}/scenes').json()
        groupsRequest = requests.get(f"http://{fullBridge['ip']}/api/{fullBridge['token']}/groups").json()
        for id in groupsRequest:
            if groupsRequest[id].get('type') == 'Room':
                if groupsRequest[id].get('name') == group:
                    fullGroup = id
        for id in scenes:
            if scenes[id].get('group') == fullGroup:
                if scenes[id].get('name') == scene:
                    fullScene = id
        requests.put(f'http://{fullBridge["ip"]}/api/{fullBridge["token"]}/groups/{fullGroup}/action', data='{"scene":"'+ fullScene + '"}')
    except Exception as e:
        status = False
        print(e)
    return status, secondImage

if __name__ == "__main__":

    def save(func):
        import marshal, os
        file_name, _ = os.path.splitext(os.path.basename(__file__))
        code_string = marshal.dumps(func.__code__)
        with open(f'{file_name}.marshal', 'wb') as file:
            marshal.dump(code_string, file)
            
    save(executeScene)