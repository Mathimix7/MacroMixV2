def startFlask():
    client_id = '1036765948302069830'
    client_secret = "lyEVHyneRoaS8isqXnNxhbd3hiF2Bcfp"
    redirect_uri='http://127.0.0.1:8800/oauth_callback'
    scopes = ['identify', 'email', 'rpc', 'rpc.voice.read', 'rpc.voice.write']
    token_url = 'https://discordapp.com/api/oauth2/token'
    authorize_url = 'https://discordapp.com/api/oauth2/authorize'
    from flask import Flask, request
    import os
    import json
    import requests
    import webbrowser
    import sys
    path = os.path.split(sys.argv[0])[0]
    print(path)
    webbrowser.open('http://127.0.0.1:8800')
    app = Flask(__name__, static_url_path='/static')
    app.secret_key = os.urandom(24)
    finalScopes = ""
    for scope in scopes:
        finalScopes += scope+"%20" 
    login_url = f"{authorize_url}?response_type=code&client_id={client_id}&redirect_uri={redirect_uri}&scope={finalScopes}"
    webbrowser.open(login_url)

    def get_data(access_token):
        headers = {
            'Authorization': f'Bearer {access_token}' 
        }
        r = requests.get("https://discord.com/api/v6/users/@me", headers=headers)
        return r

    @app.route("/oauth_callback")
    def oauth_callback():
        code = request.args.get('code')
        data = {'client_id': client_id,'client_secret': client_secret,'grant_type': 'authorization_code','code': code,'redirect_uri': redirect_uri}
        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
        r = requests.post(token_url, data=data, headers=headers)
        print(r.json())
        access_token, refresh_token = r.json()["access_token"], r.json()["refresh_token"]
        data = get_data(access_token).json()
        name, id = data["username"]+"#"+data["discriminator"], data["id"]
        if os.path.exists(os.path.join(path,"discordUsers.json")):
            with open(os.path.join(path,"discordUsers.json"), "r") as f:
                data = json.load(f)
        else:
            data = []
        with open(os.path.join(path,"discordUsers.json"), "w") as f:
            data.append({"name": name, "id": id, "access_token": access_token, "refresh_token": refresh_token})
            json.dump(data, f)
        return "Thank you, shutting down this server soon."
    app.run(host='0.0.0.0', port=8800)
startFlask()