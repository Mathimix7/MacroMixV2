def deafundeaf(settings, path, client):
    status = True
    try:
        def get_mic_state():
            return client.get_voice_settings()["data"]["deaf"]

        def mute():
            client.set_voice_settings(deaf=True)

        def unmute():
            client.set_voice_settings(deaf=False)

        if get_mic_state():
            unmute()
            secondImage = 1
        else:
            mute()
            secondImage = 0
    except Exception as e:
        status = False
        print(e)
    return status, secondImage

if __name__ == "__main__":

    def save(func):
        import marshal, os
        file_name, _ = os.path.splitext(os.path.basename(__file__))
        code_string = marshal.dumps(func.__code__)
        with open(f'{file_name}.marshal', 'wb') as file:
            marshal.dump(code_string, file)
            
    save(deafundeaf)